<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="break">
	<select id="selectMyBreak" resultMap="list">
		select b.*, username
		from break b join tbl_user u on (b.userid=u.userid)
		where b.userid=#{userId} 
		
		<!-- select * from break where userid=#{userId}; -->
	</select>
  	<resultMap type="break" id="list"></resultMap>
  	<select id="selectBreakList" resultType="map">
  		<!-- select u.username, c.com_name, kind, startdate,breakdays, BREAK_REQUEST_NO ,enddate 
		from break_request b join tbl_user u on (b.userid=u.userid)
                    		 join tbl_com c on (b.com_no=c.com_no)
		where b.com_no=#{comId}  -->
		
		select u.username, c.com_name, kind, startdate, breakdays, BREAK_REQUEST_NO ,enddate
		from break b join tbl_user u on (b.userid=u.userid)
             		 join tbl_com c on (c.com_no=u.com_no)
            		 join (select * from break_request where STATUS='결재 완료')r on (b.userid=r.userid)
		where u.status='Y' and u.com_no=#{comId}
		
  	</select>
  	
  	<select id="searchMember" resultType="map">
  		select t.username, t.userid, c.com_name, b.regular_break, b.reward_break, t.position
		from tbl_user t left join break b on(t.userid=b.userid)
                        join tbl_com c on (t.com_no=c.com_no)
        where 1=1 and t.status='Y' and c.com_no =#{comId}
        <if test="name_com != null and name_com!=''">
 		  and t.username like '%'||#{name_com}||'%' 
 		
 		</if>
     
  		<if test=" enrolldate1 !=''">
  			and (joindate between #{enrolldate1} and 
  			<if test="enrolldate2 != '' ">
  				#{enrolldate2})
  			</if>
  			<if test="enrolldate2 == '' ">
  				sysdate)
  			</if>
  		</if>
  	</select> 
  	
  	<select id="choiceMember"  resultType="map" parameterType="list">
  		select t.username, t.userid, c.com_name, b.regular_break, b.reward_break
		from tbl_user t left join break b on(t.userid=b.userid)
                        join tbl_com c on (t.com_no=c.com_no)
        where t.status='Y' and t.userid in
        <foreach item="clist" index="index" collection="userList" open="(" separator="," close=")">
			#{clist}
		</foreach> 
  	</select>
  	
  	<select id="choiceMemberDelete" resultType="map" parameterType="list">
  		<!-- select a.* 
		from (
		
		select t.username, t.userid, c.com_name, b.regular_break, b.reward_break
		from tbl_user t left join break b on(t.userid=b.userid)
                        join tbl_com c on (t.com_no=c.com_no)
        where 1=1
        <if test="name_com != null and name_com!=''">
 		and t.status='Y' and c.com_no =#{comId} and t.username like '%'||#{name_com}||'%' 
 		
 		</if>
     
  		<if test="enddate1 != null and enddate1 !=''">
  			and joindate between #{enddate1} and
  			<if test="enddate2 != null and enddate2 !=''">
  				#{enddate2}
  			</if>
  			<if test="!(enddate2 != null and enddate2 !='')">
  				sysdate
  			</if>
  		</if>
 		
 		 )a -->
 		 
 		 select a.*
 		 from (
 		 	select * from tbl_user u left join tbl_com c on(u.com_no=c.com_no)
 		 	where userid in
 		 <foreach item="slist" index="index" collection="selectedUserList" open="(" separator="," close=")">
			#{slist}
		</foreach> 
 		 )a
	
		where userid not in 
		<foreach item="clist" index="index" collection="userList" open="(" separator="," close=")">
			#{clist}
		</foreach> 
	
  	
  	</select>
  	
  	<insert id="insertReward">
  		insert into break(userid, REWARD_BREAK) values (#{userid},#{afterReward})
  	</insert>
  	<update id="updateReward">
  		update break set REWARD_BREAK = #{afterReward} where userid=#{userid}
  	</update>
  	
  	<select id="afterInsert" resultType="map">
  		select b.*, u.username, c.com_name
		from break b join tbl_user u on (b.userid=u.userid)
             		 join tbl_com c on (u.com_no = c.com_no)
		where b.userid = #{userid}
  	</select>
  	<select id="afterUpdate" resultType="map">
  		select b.*, u.username, c.com_name
		from break b join tbl_user u on (b.userid=u.userid)
             		 join tbl_com c on (u.com_no = c.com_no)
		where b.userid = #{userid}
  	</select>
  	<select id="personBreak" resultType="map">
  		select * from break where userid = #{userId}
  	</select>
  	<select id="selectMyInfo" resultType="map">
  		select * 
		from tbl_user u join tbl_com c on (u.com_no=c.com_no)
		where u.userid=#{userId}
  	</select>
  	<insert id="breakInesert">
  <!-- 	<if test="renamed_file_name !=null or renamed_file_name !=''"> -->
  		insert into break_request 
  		values(seq_break_request.nextval,#{userid},#{kind},#{startdate},#{breakdays},#{reason},#{renamed_file_name},#{com_no},
  										#{approvals},#{approval_status},#{enddate},'결재 중')
  	<!-- </if> -->
  	
  	<!-- <if test="renamed_file_name ==null or renamed_file_name ==''">
  		 insert into break_request(break_request_no,userid,kind,startdate,breakdays,reason,com_no,approvals,approval_status,enddate)
  		 values(seq_break_request.nextval,#{userid},#{kind},#{startdate},#{breakdays},#{reason},#{com_no},
  										#{approvals},#{approval_status},#{enddate}) 
  	</if> -->
  	</insert>
  	<select id="selectBreakRequest" resultType="map">
  		select *
		from break_request r left join tbl_user u on (r.userid=u.userid)
                  			 left join tbl_com c on (u.com_no=c.com_no)
		where c.com_no= #{comId} and r.status != '반려'
  	</select>
  	<select id="selectBreakRequestCnt" resultType="_int">
  		select count(*)
		from break_request r left join tbl_user u on (r.userid=u.userid)
                  			 left join tbl_com c on (u.com_no=c.com_no)
		where c.com_no= #{comId} and r.status != '반려'
  	</select>

  	<update id="deleteBreak">
  		update break_request set status = '반려' where break_request_no = #{breakid}
  	</update>
  	
  	<select id="selectBreakSetting" resultType="breakSetting">
  		select * from break_setting where com_no =#{com_no}
  	</select>
  	<update id="updateBreakSetting">
  		update break_setting set createdate = #{createdate}, breakdays = #{breakdays} where com_no = #{com_no}
  	</update>
  	<update id="callProc_break_manual" statementType="CALLABLE">
	    {
	        call proc_break_manual(#{com_no},#{createdate})
	    }
	</update>
  	<select id="alllBreakList" resultType="map">
  		SELECT U.USERID, U.USERNAME, U.JOINDATE, NVL(B.REGULAR_BREAK,0) "REGULAR_BREAK", NVL(B.REWARD_BREAK,0) "REWARD_BREAK", NVL(B.REGULAR_USED_BREAK,0) "REGULAR_USED_BREAK", NVL(B.REWARD_USED_BREAK,0) "REWARD_USED_BREAK"
		FROM TBL_USER U  LEFT JOIN BREAK B ON (B.USERID=U.USERID)
		WHERE U.COM_NO=#{comId} AND U.STATUS='Y'
  	</select>
  	<select id="allBreakListCnt" resultType="_int">
  		select count(*)
		from tbl_user u  left join break b on (b.userid=u.userid)
		where u.com_no=#{comId} and u.status='Y'
  	</select>
  	<update id="updateBreakInfo" >
  		update break set regular_break= #{regular}, reward_break = #{reward} where userid=#{breakUserid}
  	</update>
  	<select id="searchKindList" resultType="map">
  	select distinct r.userid,u.username, u.joindate,
   		   (select count(*) from break_request where userid=#{userid} and kind='연차' ) 연차,
   	       (select count(*) from break_request where userid=#{userid} and kind='포상' ) 포상,
           (select count(*) from break_request where userid=#{userid} and kind='훈련') 훈련,
           (select count(*) from break_request where userid=#{userid} and kind='교육') 교육,
           (select count(*) from break_request where userid=#{userid} and kind='경조사') 경조사,
           (select count(*) from break_request where userid=#{userid} and kind='병가') 병가,
           (select count(*) from break_request where userid=#{userid} and kind='출산') 출산
	from break_request r left join tbl_user u on(r.userid=u.userid) 
	where r.userid=#{userid} and r.status !='반려'
  	
  	</select>
  	<select id="personBreakRequestList" resultType="map">
  		select * from break_request where userid = #{userid}
  	</select>
	<select id="selectBreakRequestUserIdList" resultType="breakrRequest">
		select * from break_request where userid=#{userId}
	</select>
	<select id="checkBreak" resultType="string">
		select * from break where userid = #{userid}
	
	</select>
	<insert id="insertBreakInfo">
		insert into break values(#{breakUserid},#{regular},#{reward},default,default)
	</insert>
	
	
	
</mapper>
